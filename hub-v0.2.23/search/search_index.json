{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Qadence Hub Overview","text":"<p>Welcome to the documentation for the Qadence Hub. This repository contains multiple modular Python packages developed for Qadence features</p>"},{"location":"#included-packages","title":"Included Packages","text":"<ul> <li>qadence-commons: Shared quantum utilities library in Qadence</li> <li>qadence-mitigation: Quantum error mitigation techniques</li> <li>qadence-measurement: Quantum output measurement methods</li> <li>qadence-model: Quantum constructors for various blocks and ans\u00e4tze.</li> </ul>"},{"location":"#module-docs","title":"Module Docs","text":"<ul> <li>qadence-commons documentation</li> <li>qadence-mitigation documentation</li> <li>qadence-measurement documentation</li> <li>qadence-model documentation</li> </ul>"},{"location":"#development-resources","title":"Development Resources","text":"<ul> <li>Setup Guide</li> <li>Testing</li> </ul>"},{"location":"#qadence-hub-structure","title":"Qadence-Hub Structure","text":"<p>This repository follows a modular monorepo layout.</p> <pre><code>qadence-hub/\n\u251c\u2500\u2500 qadence-commons/           # Shared utility libraries for Qadence\n\u251c\u2500\u2500 qadence-mitigation/        # Tools for error mitigation in quantum circuit execution\n\u251c\u2500\u2500 qadence-measurement/       # Interfaces for executing and analyzing quantum measurement\n\u251c\u2500\u2500 qadence-model/             # Quantum ML models built on variational quantum circuits\n\u251c\u2500\u2500 docs/                       # Root documentation site\n\u251c\u2500\u2500 pyproject.toml              # Project configuration (Hatch-based)\n\u2514\u2500\u2500 .github/workflows/          # CI/CD pipelines (tests, docs, lint)\n</code></pre> <p>Each module is independently versioned and will be published to PyPI.</p>"},{"location":"#directory-conventions","title":"Directory Conventions","text":"<ul> <li>Use <code>project_name/</code> layout inside each module for source codes</li> <li>Tests should live in <code>tests/</code> inside each module</li> <li>Documentation should reside in the root <code>docs/</code> or module-specific docs</li> </ul>"},{"location":"CODE_OF_CONDUCT/","title":"CODE OF CONDUCT","text":"<p>Code of Conduct</p>"},{"location":"CODE_OF_CONDUCT/#our-pledge","title":"Our Pledge","text":"<p>In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p>"},{"location":"CODE_OF_CONDUCT/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to creating a positive environment include:</p> <ul> <li>Using welcoming and inclusive language</li> <li>Being respectful of differing viewpoints and experiences</li> <li>Gracefully accepting constructive criticism</li> <li>Focusing on what is best for the community</li> <li>Showing empathy towards other community members</li> </ul> <p>Examples of unacceptable behavior by participants include:</p> <ul> <li>The use of sexualized language or imagery and unwelcome sexual attention or advances</li> <li>Trolling, insulting/derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or electronic address, without explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a professional setting</li> </ul>"},{"location":"CODE_OF_CONDUCT/#our-responsibilities","title":"Our Responsibilities","text":"<p>Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.</p> <p>Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.</p>"},{"location":"CODE_OF_CONDUCT/#scope","title":"Scope","text":"<p>This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.</p>"},{"location":"contributing/","title":"How to contribute","text":"<p>We're grateful for your interest in participating in qadence-hub. Please follow our guidelines to ensure a smooth contribution process.</p>"},{"location":"contributing/#reporting-an-issue-or-proposing-a-feature","title":"Reporting an issue or proposing a feature","text":"<p>Your course of action will depend on your objective, but generally, you should start by creating an issue. If you've discovered a bug or have a feature you'd like to see added to qadence, feel free to create an issue on qadence-hubs's GitHub issue tracker. Here are some steps to take:</p> <ol> <li>Quickly search the existing issues using relevant keywords to ensure your issue hasn't been addressed already.</li> <li> <p>If your issue is not listed, create a new one. Try to be as detailed and clear as possible in your description.</p> </li> <li> <p>If you're merely suggesting an improvement or reporting a bug, that's already excellent! We thank you for it. Your issue will be listed and, hopefully, addressed at some point.</p> </li> <li>However, if you're willing to be the one solving the issue, that would be even better! In such instances, you would proceed by preparing a Pull Request.</li> </ol>"},{"location":"contributing/#submitting-a-pull-request","title":"Submitting a pull request","text":"<p>We're excited that you're eager to contribute to qadence-hub. To contribute, fork the <code>main</code> branch of qadence repository and once you are satisfied with your feature and all the tests pass create a Pull Request.</p> <p>Here's the process for making a contribution:</p> <p>Click the \"Fork\" button at the upper right corner of the repo page to create a new GitHub repo at <code>https://github.com/USERNAME/qadence-hub</code>, where <code>USERNAME</code> is your GitHub ID. Then, <code>cd</code> into the directory where you want to place your new fork and clone it:</p> <pre><code>git clone https://github.com/USERNAME/qadence-hub.git\n</code></pre> <p>Next, navigate to your new qadence fork directory and mark the main qadence repository as the <code>upstream</code>:</p> <pre><code>git remote add upstream https://github.com/pasqal-io/qadence-hub.git\n</code></pre>"},{"location":"contributing/#setting-up-your-development-environment","title":"Setting up your development environment","text":"<p>We recommended to use <code>hatch</code> for managing environments:</p> <p>To develop within qadence, use: <pre><code>pip install hatch\nhatch -v shell\n</code></pre></p>"},{"location":"contributing/#useful-thing-for-your-workflow-linting","title":"Useful thing for your workflow: linting","text":"<p>Use <code>pre-commit</code> to lint your code and run the unit tests before pushing a new commit.</p> <p>Using <code>hatch</code>, it's simply:</p> <pre><code>hatch -e tests run pre-commit run --all-files\n</code></pre> <p>Our CI/CD pipeline will also test if the documentation can be built correctly. To test it locally, please run:</p> <pre><code>hatch -e docs run mkdocs build --clean --strict\n</code></pre> <p>Without <code>hatch</code>, <code>pip</code> install those libraries first: \"mkdocs\", \"mkdocs-material\", \"mkdocstrings\", \"mkdocstrings-python\", \"mkdocs-section-index\", \"mkdocs-jupyter\", \"mkdocs-exclude\", \"markdown-exec\"</p> <p>And then:</p> <pre><code> mkdocs build --clean --strict\n</code></pre>"},{"location":"setup/","title":"Setup Guide","text":""},{"location":"setup/#1-clone-qadence-hub","title":"1. Clone Qadence-Hub","text":"<pre><code>git clone https://github.com/pasqal-io/qadence-hub.git\ncd qadence-hub\n</code></pre>"},{"location":"setup/#2-navigate-to-the-directory-for-the-project-you-want-to-work-on","title":"2. Navigate to the directory for the project you want to work on:","text":"<ul> <li> <p>For mitigations development:     <pre><code>cd qadence-mitigation\n</code></pre></p> </li> <li> <p>For commons development:     <pre><code>cd qadence-commons\n</code></pre></p> </li> </ul>"},{"location":"setup/#3-enter-the-hatch-environment","title":"3. Enter the Hatch environment","text":"<p>We use Hatch to manage development environments and builds. To set up and enter the environment, run:</p> <pre><code>hatch env create\nhatch shell\n</code></pre>"},{"location":"test/","title":"Test Guide","text":""},{"location":"test/#lint-type-check","title":"Lint &amp; Type Check","text":"<pre><code>pre-commit run --all-files\n</code></pre>"},{"location":"test/#build-documentation","title":"Build Documentation","text":"<pre><code>hatch run docs:build\n</code></pre> <p>This will build the root documentation site into the <code>site/</code> directory.</p>"},{"location":"test/#run-tests","title":"Run Tests","text":"<p>Each module has its own test configuration. For example:</p> <pre><code>cd qadence-mitigation\nhatch run test\n</code></pre>"}]}